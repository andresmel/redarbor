//agrega componente headder a layout
const header = () => {
  fetch("components/header.html")
    .then((response) => {
      if (!response.ok) {
        alert("error en el fetch no se puede acceder al recurso");
        return 0;
      }
      return response.text();
    })
    .then((header) => {
      document.getElementById("header").innerHTML = header;
    })
    .catch((error) => {
      console.log(error.message);
    });
};

//agrega componente loading a layout
const loading = () => {
  fetch("components/loading.html")
    .then((response) => {
      if (!response.ok) {
        alert("error en el fetch no se puede acceder aal recurso");
        return 0;
      }
      return response.text();
    })
    .then((loading) => {
      document.getElementById("loading").innerHTML = loading;
    })
    .catch((error) => {
      console.log(error.message);
    });
};

//agrega componente tabla a layout
const table = () => {
  fetch("components/table.html")
    .then((response) => {
      if (!response.ok) {
        alert("error en el fetch no se puede acceder aal recurso");
        return 0;
      }
      return response.text();
    })
    .then((table) => {
      document.getElementById("tableContainer").innerHTML = table;
      $('#table').DataTable().clear().destroy();
      datatable();
    })
    .catch((error) => {
      console(error.message);
    });
};

//carg el componente form a layout
const form = () => {
    fetch("components/form.html")
      .then((response) => {
        if (!response.ok) {
          alert("error en el fetch no se puede acceder aal recurso");
          return 0;
        }
        return response.text();
      })
      .then((form) => {
        document.getElementById("form").innerHTML = form;
        datatable();
      })
      .catch((error) => {
        console.log(error.message);
      });
  };

//inicializa datos al componete table. y posteriormente actualizarlo desde la capa de datos
const datatable = (usuaurios = {}) => {
  if (Object.keys(usuaurios).length <= 0) {
    usuaurios = getUsuarios();
    $("#table").DataTable({
      data: usuaurios,
      columns: [
        { data: "id", title: "Id"},
        { data: "name", title: "Name" },
        { data: "surname", title: "Surname" },
        { data: "dateofbirth", title: "DateOfBirth" },
        { data: "email", title: "Email" },
        { data: "roleId", title: "roleId" },
        {
          data: null,
          title: "Acciones",
          render: function (data, type, row) {
            return `
          <button class="btn btn-editar edit"  onclick="editar(${row.id})">Edit</button>
          <button class="btn btn-eliminar remove" data-bs-toggle="modal" onclick="remove(${row.id},'${row.name}','${row.surname}')">delete</button>
        `;
          },
        },
      ],
      columnDefs: [
        {
          targets: 0,
          width: "20px",
        },
      ],
      language: {
        url: "https://cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json",
      },
    });
  } else {
    const tabla = $("#table").DataTable();
    tabla.clear(); // limpia los datos actuales
    tabla.rows.add(usuaurios); // agrega los nuevos
    tabla.draw();

  }
};


setTimeout(() => {
  header();
  form();
  table(); 
  loading();
}, 300);


